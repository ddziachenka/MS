buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.('spring-boot.version')}"
        classpath "io.spring.gradle:dependency-management-plugin:${project.('spring-dependency-management.version')}"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "Hoxton.SR6")
}

group = "$group"
version = "$version"
sourceCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${project.('lombok.version')}"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${project.('lombok.version')}"

    compile group: 'io.springfox', name: 'springfox-swagger2', version: "${project.('springfox-swagger2.version')}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${project.('springfox-swagger-ui.version')}"

    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: "${project.property("mapstruct.version")}"
    implementation group: 'org.mapstruct', name: 'mapstruct', version: "${project.property("mapstruct.version")}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs = ['-Amapstruct.suppressGeneratorTimestamp=true']
}

bootJar {
    mainClassName = 'com.epam.yoke.notify.YokeNotifyApplication'
}
